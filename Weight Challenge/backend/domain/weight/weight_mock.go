// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/weight/weight.go

// Package weight is a generated GoMock package.
package weight

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDomainItf is a mock of DomainItf interface.
type MockDomainItf struct {
	ctrl     *gomock.Controller
	recorder *MockDomainItfMockRecorder
}

// MockDomainItfMockRecorder is the mock recorder for MockDomainItf.
type MockDomainItfMockRecorder struct {
	mock *MockDomainItf
}

// NewMockDomainItf creates a new mock instance.
func NewMockDomainItf(ctrl *gomock.Controller) *MockDomainItf {
	mock := &MockDomainItf{ctrl: ctrl}
	mock.recorder = &MockDomainItfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDomainItf) EXPECT() *MockDomainItfMockRecorder {
	return m.recorder
}

// CreateWeightData mocks base method.
func (m *MockDomainItf) CreateWeightData(data WeightData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWeightData", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateWeightData indicates an expected call of CreateWeightData.
func (mr *MockDomainItfMockRecorder) CreateWeightData(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWeightData", reflect.TypeOf((*MockDomainItf)(nil).CreateWeightData), data)
}

// EditWeightData mocks base method.
func (m *MockDomainItf) EditWeightData(data WeightData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EditWeightData", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// EditWeightData indicates an expected call of EditWeightData.
func (mr *MockDomainItfMockRecorder) EditWeightData(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EditWeightData", reflect.TypeOf((*MockDomainItf)(nil).EditWeightData), data)
}

// GetAllWeightData mocks base method.
func (m *MockDomainItf) GetAllWeightData() ([]WeightData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllWeightData")
	ret0, _ := ret[0].([]WeightData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllWeightData indicates an expected call of GetAllWeightData.
func (mr *MockDomainItfMockRecorder) GetAllWeightData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllWeightData", reflect.TypeOf((*MockDomainItf)(nil).GetAllWeightData))
}
